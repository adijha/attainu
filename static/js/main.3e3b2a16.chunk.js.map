{"version":3,"sources":["components/AskUser.js","hooks/useKeyPress.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["AskUser","props","useState","rows","setRows","columns","setColumns","id","placeholder","value","type","min","max","step","maxLength","onChange","e","target","style","backgroundColor","onClick","generateTable","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","useCallback","key","upHandler","useEffect","window","addEventListener","removeEventListener","Table","r","c","randomFoodPosition","userPosition","setUserPosition","setGameOver","setStepsTakenByUser","stepsTakenByUser","upPress","downPress","leftPress","rightPress","x","y","Cell","userorNot","toString","foodorNot","indexOf","index","splice","length","consumeFood","className","cells","push","JSON","stringify","App","rowCount","setRowCount","columnCount","setColumnCount","showTable","setShowTable","gameOver","cc","Math","trunc","random","rr","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAEe,SAASA,EAAQC,GAAQ,IAAD,EACdC,mBAAS,GADK,mBAC/BC,EAD+B,KACzBC,EADyB,OAERF,mBAAS,GAFD,mBAE/BG,EAF+B,KAEtBC,EAFsB,KAItC,OACC,gCACC,oBAAIC,GAAG,QAAP,qFAIA,uBACCC,YAAY,OACZC,MAAON,EACPO,KAAK,SACLC,IAAI,IACJC,IAAI,KACJC,KAAK,IACLC,UAAU,IACVC,SAAU,SAACC,GAAD,OAAOZ,EAAQY,EAAEC,OAAOR,UAEnC,uBACCE,IAAI,IACJE,KAAK,IACLD,IAAI,KACJF,KAAK,SACLI,UAAU,IACVL,MAAOJ,EACPU,SAAU,SAACC,GAAD,OAAOV,EAAWU,EAAEC,OAAOR,QACrCD,YAAY,YAGb,wBACCU,MAAO,CAAEC,gBAAiB,SAC1BC,QAAS,kBAAMnB,EAAMoB,cAAclB,EAAME,IAF1C,4BAMA,gGCrCY,SAASiB,EAAYC,GAAY,IAAD,EACVrB,oBAAS,GADC,mBACvCsB,EADuC,KAC3BC,EAD2B,KAExCC,EAAcC,uBACnB,YAAa,EAAVC,MACUL,GACXE,GAAc,KAGhB,CAACF,IAEIM,EAAYF,uBACjB,YAAa,EAAVC,MACUL,GACXE,GAAc,KAGhB,CAACF,IAWF,OARAO,qBAAU,WAGT,OAFAC,OAAOC,iBAAiB,UAAWN,GACnCK,OAAOC,iBAAiB,QAASH,GAC1B,WACNE,OAAOE,oBAAoB,UAAWP,GACtCK,OAAOE,oBAAoB,QAASJ,MAEnC,CAACH,EAAaG,IACVL,EC1BR,IA6FeU,EA7FD,SAAC,GASR,IARNC,EAQK,EARLA,EACAC,EAOK,EAPLA,EACAC,EAMK,EANLA,mBACAC,EAKK,EALLA,aACAC,EAIK,EAJLA,gBACAC,EAGK,EAHLA,YACAC,EAEK,EAFLA,oBACAC,EACK,EADLA,iBAEMC,EAAUrB,EAAY,WACtBsB,EAAYtB,EAAY,aACxBuB,EAAYvB,EAAY,aACxBwB,EAAaxB,EAAY,cAE/BQ,qBAAU,WACT,GAAIa,EAAS,CAAC,IACLI,EAAST,EAATS,EAAGC,EAAMV,EAANU,EACD,IAANA,IACHT,EAAgB,CAAEQ,IAAGC,EAAGA,EAAI,IAC5BP,EAAoBC,EAAmB,OAGvC,CAACC,IACJb,qBAAU,WACT,GAAIc,EAAW,CAAC,IACPG,EAAST,EAATS,EAAGC,EAAMV,EAANU,EACPA,EAAIb,EAAI,IACXI,EAAgB,CAAEQ,IAAGC,EAAGA,EAAI,IAC5BP,EAAoBC,EAAmB,OAGvC,CAACE,EAAWT,IACfL,qBAAU,WACT,GAAIe,EAAW,CAAC,IACPE,EAAST,EAATS,EAAGC,EAAMV,EAANU,EACD,IAAND,IACHR,EAAgB,CAAEQ,EAAGA,EAAI,EAAGC,MAC5BP,EAAoBC,EAAmB,OAGvC,CAACG,IACJf,qBAAU,WACT,GAAIgB,EAAY,CAAC,IACRC,EAAST,EAATS,EAAGC,EAAMV,EAANU,EACPD,EAAIX,EAAI,IACXG,EAAgB,CAAEQ,EAAGA,EAAI,EAAGC,MAC5BP,EAAoBC,EAAmB,OAGvC,CAACN,EAAGU,IA4BP,IA1BA,IAAMG,EAAO,SAAC,GAAc,IAAZF,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EAUlB,IACIE,EADkBH,EAAEI,WAAaH,EAAEG,cAG1B,OAAZb,QAAY,IAAZA,OAAA,EAAAA,EAAcS,EAAEI,aAAhB,OAA6Bb,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAcU,EAAEG,YAC1CC,GAC0D,IAA7Df,EAAmBgB,QAAQN,EAAEI,WAAaH,EAAEG,YAE7C,OADAD,GAAaE,GAfb,SAAqBL,EAAGC,GACvB,IAAIM,EAAQjB,EAAmBgB,QAAQN,EAAEI,WAAaH,EAAEG,YACpDG,GAAS,IACZjB,EAAmBkB,OAAOD,EAAO,GACC,IAA9BjB,EAAmBmB,QACtBhB,GAAY,IAUWiB,CAAYV,EAAGC,GAErC,qBAAIU,UAAU,OAAd,UACGX,EAAE,GAAGC,EACTE,GAAa,eACbE,GAAa,mBAIbjD,EAAO,GACF6C,EAAI,EAAGA,EAAIb,EAAGa,IAAK,CAE3B,IADA,IAAMW,EAAQ,GACLZ,EAAI,EAAGA,EAAIX,EAAGW,IACtBY,EAAMC,KAAK,cAACX,EAAD,CAAMF,EAAGA,EAAGC,EAAGA,KAE3B7C,EAAKyD,KAAK,6BAAKD,KAEf,OACA,qCACC,8BAAME,KAAKC,UAAUxB,KACrB,gCAAQnC,QCbI4D,EAxEH,WAAO,IAAD,EACe7D,qBADf,mBACV8D,EADU,KACAC,EADA,OAEqB/D,qBAFrB,mBAEVgE,EAFU,KAEGC,EAFH,OAGiBjE,oBAAS,GAH1B,mBAGVkE,EAHU,KAGCC,EAHD,OAIuBnE,mBAAS,IAJhC,mBAIVoC,EAJU,KAIIC,EAJJ,OAKYrC,mBAAS,IAA/BmC,EALU,sBAMenC,oBAAS,GANxB,mBAMVoE,EANU,KAMA9B,EANA,OAO+BtC,mBAAS,GAPxC,mBAOVwC,EAPU,KAOQD,EAPR,KAsCjB,OACC,qBAAKiB,UAAU,YAAf,SACEU,EACA,qCACC,wDAEC,uBAFD,8BAIC,0BAED,iEAECE,EACA,kDAAqB5B,EAArB,sBAEA,cAAC,EAAD,CACCP,EAAG6B,EACH5B,EAAG8B,EACH7B,mBAAoBA,EACpBC,aAAcA,EACdC,gBAAiBA,EACjBC,YAAaA,EACbC,oBAAqBA,EACrBC,iBAAkBA,OAKrB,cAAC1C,EAAD,CAASqB,cAzDU,SAACc,EAAGC,GAIzB,IAHA6B,EAAY9B,GACZgC,EAAe/B,GACfiC,GAAa,GACNhC,EAAmBmB,OAASpB,GAAG,CACrC,IAAImC,EAAKC,KAAKC,MAAMD,KAAKE,SAAWvC,GAChCwC,EAAKH,KAAKC,MAAMD,KAAKE,SAAWtC,IACI,IAApCC,EAAmBgB,QAAQsB,IAC9BtC,EAAmBuB,KAAKe,EAAGxB,WAAaoB,EAAGpB,YAGzChB,EAAIC,GACPwC,QAAQC,IAAIL,KAAKC,MAAMtC,EAAI,IAC3ByC,QAAQC,IAAIL,KAAKC,MAAMrC,EAAI,IAC3BG,EAAgB,CACfS,EAAGwB,KAAKC,MAAMtC,EAAI,GAClBY,EAAGyB,KAAKC,MAAMrC,EAAI,OAGnBwC,QAAQC,IAAI,UACZD,QAAQC,IAAIL,KAAKC,MAAMtC,EAAI,IAC3ByC,QAAQC,IAAIL,KAAKC,MAAMrC,EAAI,IAC3BG,EAAgB,CACfS,EAAGwB,KAAKC,MAAMtC,EAAI,GAClBY,EAAGyB,KAAKC,OAAOrC,EAAI,GAAK,YC3Bb0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3e3b2a16.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function AskUser(props) {\n\tconst [rows, setRows] = useState(5);\n\tconst [columns, setColumns] = useState(5);\n\n\treturn (\n\t\t<div>\n\t\t\t<h3 id=\"title\">\n\t\t\t\tHey, Please enter number of rows and colums for your desired table here\n\t\t\t</h3>\n\n\t\t\t<input\n\t\t\t\tplaceholder=\"rows\"\n\t\t\t\tvalue={rows}\n\t\t\t\ttype=\"number\"\n\t\t\t\tmin=\"5\"\n\t\t\t\tmax=\"15\"\n\t\t\t\tstep=\"1\"\n\t\t\t\tmaxLength=\"2\"\n\t\t\t\tonChange={(e) => setRows(e.target.value)}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tmin=\"5\"\n\t\t\t\tstep=\"1\"\n\t\t\t\tmax=\"15\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tmaxLength=\"2\"\n\t\t\t\tvalue={columns}\n\t\t\t\tonChange={(e) => setColumns(e.target.value)}\n\t\t\t\tplaceholder=\"columns\"\n\t\t\t/>\n\n\t\t\t<button\n\t\t\t\tstyle={{ backgroundColor: \"white\" }}\n\t\t\t\tonClick={() => props.generateTable(rows, columns)}\n\t\t\t>\n\t\t\t\tGenerate Table\n\t\t\t</button>\n\t\t\t<p>Caution: It won't work on mobile, since it's a keyboard game</p>\n\t\t</div>\n\t);\n}\n","import { useState, useEffect, useCallback } from \"react\";\n\nexport default function useKeyPress(targetKey) {\n\tconst [keyPressed, setKeyPressed] = useState(false);\n\tconst downHandler = useCallback(\n\t\t({ key }) => {\n\t\t\tif (key === targetKey) {\n\t\t\t\tsetKeyPressed(true);\n\t\t\t}\n\t\t},\n\t\t[targetKey]\n\t);\n\tconst upHandler = useCallback(\n\t\t({ key }) => {\n\t\t\tif (key === targetKey) {\n\t\t\t\tsetKeyPressed(false);\n\t\t\t}\n\t\t},\n\t\t[targetKey]\n\t);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"keydown\", downHandler);\n\t\twindow.addEventListener(\"keyup\", upHandler);\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"keydown\", downHandler);\n\t\t\twindow.removeEventListener(\"keyup\", upHandler);\n\t\t};\n\t}, [downHandler, upHandler]);\n\treturn keyPressed;\n}\n","import React, { useEffect } from \"react\";\nimport useKeyPress from \"../hooks/useKeyPress\";\n\nconst Table = ({\n\tr,\n\tc,\n\trandomFoodPosition,\n\tuserPosition,\n\tsetUserPosition,\n\tsetGameOver,\n\tsetStepsTakenByUser,\n\tstepsTakenByUser,\n}) => {\n\tconst upPress = useKeyPress(\"ArrowUp\");\n\tconst downPress = useKeyPress(\"ArrowDown\");\n\tconst leftPress = useKeyPress(\"ArrowLeft\");\n\tconst rightPress = useKeyPress(\"ArrowRight\");\n\n\tuseEffect(() => {\n\t\tif (upPress) {\n\t\t\tconst { x, y } = userPosition;\n\t\t\tif (y !== 0) {\n\t\t\t\tsetUserPosition({ x, y: y - 1 });\n\t\t\t\tsetStepsTakenByUser(stepsTakenByUser + 1);\n\t\t\t}\n\t\t}\n\t}, [upPress]);\n\tuseEffect(() => {\n\t\tif (downPress) {\n\t\t\tconst { x, y } = userPosition;\n\t\t\tif (y < r - 1) {\n\t\t\t\tsetUserPosition({ x, y: y + 1 });\n\t\t\t\tsetStepsTakenByUser(stepsTakenByUser + 1);\n\t\t\t}\n\t\t}\n\t}, [downPress, r]);\n\tuseEffect(() => {\n\t\tif (leftPress) {\n\t\t\tconst { x, y } = userPosition;\n\t\t\tif (x !== 0) {\n\t\t\t\tsetUserPosition({ x: x - 1, y });\n\t\t\t\tsetStepsTakenByUser(stepsTakenByUser + 1);\n\t\t\t}\n\t\t}\n\t}, [leftPress]);\n\tuseEffect(() => {\n\t\tif (rightPress) {\n\t\t\tconst { x, y } = userPosition;\n\t\t\tif (x < c - 1) {\n\t\t\t\tsetUserPosition({ x: x + 1, y });\n\t\t\t\tsetStepsTakenByUser(stepsTakenByUser + 1);\n\t\t\t}\n\t\t}\n\t}, [c, rightPress]);\n\n\tconst Cell = ({ x, y }) => {\n\t\tfunction consumeFood(x, y) {\n\t\t\tvar index = randomFoodPosition.indexOf(x.toString() + y.toString());\n\t\t\tif (index > -1) {\n\t\t\t\trandomFoodPosition.splice(index, 1);\n\t\t\t\tif (randomFoodPosition.length === 0) {\n\t\t\t\t\tsetGameOver(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlet currentPosition = x.toString() + y.toString();\n\t\tlet userorNot =\n\t\t\tcurrentPosition ===\n\t\t\tuserPosition?.x.toString() + userPosition?.y.toString();\n\t\tlet foodorNot =\n\t\t\trandomFoodPosition.indexOf(x.toString() + y.toString()) !== -1;\n\t\tuserorNot && foodorNot && consumeFood(x, y);\n\t\treturn (\n      <td className=\"cell\">\n        {x+''+y}\n\t\t\t\t{userorNot && \"üêπ\"}\n\t\t\t\t{foodorNot && \"üåø\"}\n\t\t\t</td>\n\t\t);\n\t};\n\tlet rows = [];\n\tfor (let y = 0; y < r; y++) {\n\t\tconst cells = [];\n\t\tfor (let x = 0; x < c; x++) {\n\t\t\tcells.push(<Cell x={x} y={y} />);\n\t\t}\n\t\trows.push(<tr>{cells}</tr>);\n\t}\n  return (\n\t\t<>\n\t\t\t<div>{JSON.stringify(userPosition)}</div>\n\t\t\t<table>{rows}</table>\n\t\t</>\n\t);\n};\n\nexport default Table;\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport AskUser from \"./components/AskUser\";\nimport Table from \"./components/Table\";\n\nconst App = () => {\n\tconst [rowCount, setRowCount] = useState();\n\tconst [columnCount, setColumnCount] = useState();\n\tconst [showTable, setShowTable] = useState(false);\n\tconst [userPosition, setUserPosition] = useState({});\n\tconst [randomFoodPosition] = useState([]);\n\tconst [gameOver, setGameOver] = useState(false);\n\tconst [stepsTakenByUser, setStepsTakenByUser] = useState(0);\n\n\tconst generateTable = (r, c) => {\n\t\tsetRowCount(r);\n\t\tsetColumnCount(c);\n\t\tsetShowTable(true);\n\t\twhile (randomFoodPosition.length < c) {\n\t\t\tvar cc = Math.trunc(Math.random() * r);\n\t\t\tvar rr = Math.trunc(Math.random() * c);\n\t\t\tif (randomFoodPosition.indexOf(rr) === -1)\n\t\t\t\trandomFoodPosition.push(rr.toString() + cc.toString());\n\t\t}\n\n\t\tif (r > c) {\n\t\t\tconsole.log(Math.trunc(r / 2));\n\t\t\tconsole.log(Math.trunc(c / 2));\n\t\t\tsetUserPosition({\n\t\t\t\ty: Math.trunc(r / 2),\n\t\t\t\tx: Math.trunc(c / 2),\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.log(\"object\");\n\t\t\tconsole.log(Math.trunc(r / 2));\n\t\t\tconsole.log(Math.trunc(c / 2));\n\t\t\tsetUserPosition({\n\t\t\t\ty: Math.trunc(r / 2),\n\t\t\t\tx: Math.trunc((c - 1) / 2),\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t{showTable ? (\n\t\t\t\t<>\n\t\t\t\t\t<h4>\n\t\t\t\t\t\tHi hamsterüëã\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\teat fast, grass are limited\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</h4>\n\t\t\t\t\t<p> Please press arrow keys to move</p>\n\n\t\t\t\t\t{gameOver ? (\n\t\t\t\t\t\t<div>You have taken {stepsTakenByUser} steps for grass</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\tr={rowCount}\n\t\t\t\t\t\t\tc={columnCount}\n\t\t\t\t\t\t\trandomFoodPosition={randomFoodPosition}\n\t\t\t\t\t\t\tuserPosition={userPosition}\n\t\t\t\t\t\t\tsetUserPosition={setUserPosition}\n\t\t\t\t\t\t\tsetGameOver={setGameOver}\n\t\t\t\t\t\t\tsetStepsTakenByUser={setStepsTakenByUser}\n\t\t\t\t\t\t\tstepsTakenByUser={stepsTakenByUser}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<AskUser generateTable={generateTable} />\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}